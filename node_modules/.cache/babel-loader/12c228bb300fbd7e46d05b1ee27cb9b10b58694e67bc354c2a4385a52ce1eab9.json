{"ast":null,"code":"const API_KEY = \"발급받은_키\";\nconst sendToGemini = async userInput => {\n  var _json$candidates, _json$candidates$, _json$candidates$$con, _json$candidates$$con2, _json$candidates$$con3;\n  const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${API_KEY}`;\n  const body = {\n    contents: [{\n      role: \"user\",\n      parts: [{\n        text: `다음 음식과 그람수의 열량, 탄수화물, 단백질, 지방을 알려줘:\\n${userInput}`\n      }]\n    }]\n  };\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await response.json();\n  return ((_json$candidates = json.candidates) === null || _json$candidates === void 0 ? void 0 : (_json$candidates$ = _json$candidates[0]) === null || _json$candidates$ === void 0 ? void 0 : (_json$candidates$$con = _json$candidates$.content) === null || _json$candidates$$con === void 0 ? void 0 : (_json$candidates$$con2 = _json$candidates$$con.parts) === null || _json$candidates$$con2 === void 0 ? void 0 : (_json$candidates$$con3 = _json$candidates$$con2[0]) === null || _json$candidates$$con3 === void 0 ? void 0 : _json$candidates$$con3.text) || \"응답 없음\";\n};","map":{"version":3,"names":["API_KEY","sendToGemini","userInput","_json$candidates","_json$candidates$","_json$candidates$$con","_json$candidates$$con2","_json$candidates$$con3","url","body","contents","role","parts","text","response","fetch","method","headers","JSON","stringify","json","candidates","content"],"sources":["/Users/yunhyungnam/Desktop/foodrecord/front/src/components/SendToGemini.js"],"sourcesContent":["const API_KEY = \"발급받은_키\";\n\nconst sendToGemini = async (userInput) => {\n  const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${API_KEY}`;\n\n  const body = {\n    contents: [\n      {\n        role: \"user\",\n        parts: [\n          { text: `다음 음식과 그람수의 열량, 탄수화물, 단백질, 지방을 알려줘:\\n${userInput}` }\n        ]\n      }\n    ]\n  };\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body)\n  });\n\n  const json = await response.json();\n  return json.candidates?.[0]?.content?.parts?.[0]?.text || \"응답 없음\";\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,QAAQ;AAExB,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACxC,MAAMC,GAAG,GAAG,qGAAqGR,OAAO,EAAE;EAE1H,MAAMS,IAAI,GAAG;IACXC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,wCAAwCX,SAAS;MAAG,CAAC;IAEjE,CAAC;EAEL,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;IAChCQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CR,IAAI,EAAES,IAAI,CAACC,SAAS,CAACV,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMW,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAO,EAAAjB,gBAAA,GAAAiB,IAAI,CAACC,UAAU,cAAAlB,gBAAA,wBAAAC,iBAAA,GAAfD,gBAAA,CAAkB,CAAC,CAAC,cAAAC,iBAAA,wBAAAC,qBAAA,GAApBD,iBAAA,CAAsBkB,OAAO,cAAAjB,qBAAA,wBAAAC,sBAAA,GAA7BD,qBAAA,CAA+BO,KAAK,cAAAN,sBAAA,wBAAAC,sBAAA,GAApCD,sBAAA,CAAuC,CAAC,CAAC,cAAAC,sBAAA,uBAAzCA,sBAAA,CAA2CM,IAAI,KAAI,OAAO;AACnE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
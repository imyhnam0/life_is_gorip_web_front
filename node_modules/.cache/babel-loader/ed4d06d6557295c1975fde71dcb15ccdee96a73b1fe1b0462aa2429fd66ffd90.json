{"ast":null,"code":"const API_KEY = \"AIzaSyDShhPzKN-KoONmXkAVWqYgdtZ-_i66GHE\"; // 발급받은 API 키 입력\n\nconst sendToGemini = async userInput => {\n  const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${API_KEY}`;\n  const body = {\n    contents: [{\n      role: \"user\",\n      parts: [{\n        text: `다음 식단을 바탕으로 음식별 열량, 탄수화물, 단백질, 지방을 계산해줘:\\n${userInput}`\n      }]\n    }]\n  };\n  try {\n    var _json$candidates, _json$candidates$, _json$candidates$$con, _json$candidates$$con2, _json$candidates$$con3;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Gemini API 오류 (${response.status}): ${errorText}`);\n    }\n    const json = await response.json();\n    return ((_json$candidates = json.candidates) === null || _json$candidates === void 0 ? void 0 : (_json$candidates$ = _json$candidates[0]) === null || _json$candidates$ === void 0 ? void 0 : (_json$candidates$$con = _json$candidates$.content) === null || _json$candidates$$con === void 0 ? void 0 : (_json$candidates$$con2 = _json$candidates$$con.parts) === null || _json$candidates$$con2 === void 0 ? void 0 : (_json$candidates$$con3 = _json$candidates$$con2[0]) === null || _json$candidates$$con3 === void 0 ? void 0 : _json$candidates$$con3.text) || \"응답 없음\";\n  } catch (error) {\n    console.error(\"Gemini API 호출 실패:\", error);\n    return \"Gemini API 호출 중 오류 발생\";\n  }\n};\nexport default sendToGemini;","map":{"version":3,"names":["API_KEY","sendToGemini","userInput","url","body","contents","role","parts","text","_json$candidates","_json$candidates$","_json$candidates$$con","_json$candidates$$con2","_json$candidates$$con3","response","fetch","method","headers","JSON","stringify","ok","errorText","Error","status","json","candidates","content","error","console"],"sources":["/Users/yunhyungnam/Desktop/foodrecord/front/src/components/SendToGemini.js"],"sourcesContent":["const API_KEY = \"AIzaSyDShhPzKN-KoONmXkAVWqYgdtZ-_i66GHE\"; // 발급받은 API 키 입력\n\nconst sendToGemini = async (userInput) => {\n  const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${API_KEY}`;\n\n\n\n  const body = {\n    contents: [\n      {\n        role: \"user\",\n        parts: [\n          {\n            text: `다음 식단을 바탕으로 음식별 열량, 탄수화물, 단백질, 지방을 계산해줘:\\n${userInput}`\n          }\n        ]\n      }\n    ]\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Gemini API 오류 (${response.status}): ${errorText}`);\n    }\n\n    const json = await response.json();\n    return json.candidates?.[0]?.content?.parts?.[0]?.text || \"응답 없음\";\n  } catch (error) {\n    console.error(\"Gemini API 호출 실패:\", error);\n    return \"Gemini API 호출 중 오류 발생\";\n  }\n};\n\nexport default sendToGemini;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,yCAAyC,CAAC,CAAC;;AAE3D,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EACxC,MAAMC,GAAG,GAAG,0FAA0FH,OAAO,EAAE;EAI/G,MAAMI,IAAI,GAAG;IACXC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,CACL;QACEC,IAAI,EAAE,6CAA6CN,SAAS;MAC9D,CAAC;IAEL,CAAC;EAEL,CAAC;EAED,IAAI;IAAA,IAAAO,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAG,EAAE;MAChCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDb,IAAI,EAAEc,IAAI,CAACC,SAAS,CAACf,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACU,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACN,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIc,KAAK,CAAC,kBAAkBR,QAAQ,CAACS,MAAM,MAAMF,SAAS,EAAE,CAAC;IACrE;IAEA,MAAMG,IAAI,GAAG,MAAMV,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAO,EAAAf,gBAAA,GAAAe,IAAI,CAACC,UAAU,cAAAhB,gBAAA,wBAAAC,iBAAA,GAAfD,gBAAA,CAAkB,CAAC,CAAC,cAAAC,iBAAA,wBAAAC,qBAAA,GAApBD,iBAAA,CAAsBgB,OAAO,cAAAf,qBAAA,wBAAAC,sBAAA,GAA7BD,qBAAA,CAA+BJ,KAAK,cAAAK,sBAAA,wBAAAC,sBAAA,GAApCD,sBAAA,CAAuC,CAAC,CAAC,cAAAC,sBAAA,uBAAzCA,sBAAA,CAA2CL,IAAI,KAAI,OAAO;EACnE,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,uBAAuB;EAChC;AACF,CAAC;AAED,eAAe1B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\n// let lastRequestTime = 0;\n// const MIN_INTERVAL = 3000; // 최소 3초 간격\n\n// const sendToGemini = async (userInput) => {\n//   const now = Date.now();\n//   if (now - lastRequestTime < MIN_INTERVAL) {\n//     console.warn(\"요청이 너무 자주 발생합니다. 잠시 기다려 주세요.\");\n//     return \"요청이 너무 자주 발생했습니다. 잠시 후 다시 시도해주세요.\";\n//   }\n//   lastRequestTime = now;\n\n//   //const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${API_KEY}`;\n\n//   const body = {\n//     contents: [\n//       {\n//         role: \"user\",\n//         parts: [\n//           { text: `다음 음식과 그람수의 열량, 탄수화물, 단백질, 지방을 알려줘:\\n${userInput}` }\n//         ]\n//       }\n//     ]\n//   };\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(body)\n//     });\n\n//     if (response.status === 429) {\n//       console.error(\"429 Too Many Requests - 너무 많은 요청\");\n//       return \"요청이 너무 많습니다. 잠시 후 다시 시도해주세요.\";\n//     }\n\n//     if (!response.ok) {\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n\n//     const json = await response.json();\n//     return json.candidates?.[0]?.content?.parts?.[0]?.text || \"응답 없음\";\n\n//   } catch (error) {\n//     console.error(\"요청 중 오류 발생:\", error);\n//     return \"오류 발생: \" + error.message;\n//   }\n// };\n\n//export default sendToGemini;","map":{"version":3,"names":[],"sources":["/Users/yunhyungnam/Desktop/foodrecord/front/src/components/SendToGemini.js"],"sourcesContent":["\n// let lastRequestTime = 0;\n// const MIN_INTERVAL = 3000; // 최소 3초 간격\n\n// const sendToGemini = async (userInput) => {\n//   const now = Date.now();\n//   if (now - lastRequestTime < MIN_INTERVAL) {\n//     console.warn(\"요청이 너무 자주 발생합니다. 잠시 기다려 주세요.\");\n//     return \"요청이 너무 자주 발생했습니다. 잠시 후 다시 시도해주세요.\";\n//   }\n//   lastRequestTime = now;\n\n//   //const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${API_KEY}`;\n\n//   const body = {\n//     contents: [\n//       {\n//         role: \"user\",\n//         parts: [\n//           { text: `다음 음식과 그람수의 열량, 탄수화물, 단백질, 지방을 알려줘:\\n${userInput}` }\n//         ]\n//       }\n//     ]\n//   };\n\n//   try {\n//     const response = await fetch(url, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(body)\n//     });\n\n//     if (response.status === 429) {\n//       console.error(\"429 Too Many Requests - 너무 많은 요청\");\n//       return \"요청이 너무 많습니다. 잠시 후 다시 시도해주세요.\";\n//     }\n\n//     if (!response.ok) {\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n\n//     const json = await response.json();\n//     return json.candidates?.[0]?.content?.parts?.[0]?.text || \"응답 없음\";\n\n//   } catch (error) {\n//     console.error(\"요청 중 오류 발생:\", error);\n//     return \"오류 발생: \" + error.message;\n//   }\n// };\n\n//export default sendToGemini;\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
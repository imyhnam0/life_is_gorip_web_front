{"ast":null,"code":"var _jsxFileName = \"/Users/yunhyungnam/Desktop/foodrecord/front/src/components/Memopage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Memopage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Memopage = () => {\n  _s();\n  const [pages, setPages] = useState([]);\n  const [selectedPage, setSelectedPage] = useState();\n  const [pageContents, setPageContents] = useState({});\n  const [addingPage, setAddingPage] = useState(false);\n  const [newPageTitle, setNewPageTitle] = useState(\"\");\n  const fullUserId = localStorage.getItem(\"userId\"); // 예: abc1234-윤형남\n  const [uid, name] = fullUserId.split(\"-\");\n  useEffect(() => {\n    const fetchPages = async () => {\n      const userId = localStorage.getItem(\"userId\"); // Firebase UID or 내부 userId\n\n      const res = await fetch(`http://localhost:8080/api/pages?userId=${userId}`);\n      const data = await res.json();\n      const titles = data.map(page => page.title);\n      const contents = {};\n      data.forEach(p => {\n        contents[p.title] = p.content;\n      });\n      setPages(titles);\n      setPageContents(contents);\n      setSelectedPage(titles[0] || \"\"); // 첫 페이지 선택\n    };\n    fetchPages();\n  }, []);\n  const handleChange = e => {\n    setPageContents({\n      ...pageContents,\n      [selectedPage]: e.target.value\n    });\n  };\n  const handleAddPage = async () => {\n    const title = newPageTitle.trim();\n    if (!title || pages.includes(title)) return;\n    const userId = localStorage.getItem(\"userId\");\n    try {\n      await fetch(\"http://localhost:8080/api/pages\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          title\n        })\n      });\n      const updated = [...pages, title];\n      setPages(updated);\n      setSelectedPage(title);\n      setNewPageTitle(\"\");\n      setAddingPage(false);\n    } catch (err) {\n      console.error(\"페이지 저장 실패:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memo-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebar-title\",\n          children: \"\\uAC1C\\uC778 \\uD398\\uC774\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => setAddingPage(!addingPage),\n          children: \"\\uFF0B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), addingPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-page-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD398\\uC774\\uC9C0 \\uC81C\\uBAA9 \\uC785\\uB825\",\n          value: newPageTitle,\n          onChange: e => setNewPageTitle(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleAddPage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddPage,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"page-list\",\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${selectedPage === page ? \"active\" : \"\"}`,\n          onClick: () => setSelectedPage(page),\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memo-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"editor-title\",\n        children: selectedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"editor-textarea\",\n        placeholder: \"...\",\n        value: pageContents[selectedPage] || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Memopage, \"9vP5f+7bHUfl1FIk2IYRlaik5GY=\");\n_c = Memopage;\nexport default Memopage;\nvar _c;\n$RefreshReg$(_c, \"Memopage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Memopage","_s","pages","setPages","selectedPage","setSelectedPage","pageContents","setPageContents","addingPage","setAddingPage","newPageTitle","setNewPageTitle","fullUserId","localStorage","getItem","uid","name","split","useEffect","fetchPages","userId","res","fetch","data","json","titles","map","page","title","contents","forEach","p","content","handleChange","e","target","value","handleAddPage","trim","includes","method","headers","body","JSON","stringify","updated","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/yunhyungnam/Desktop/foodrecord/front/src/components/Memopage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Memopage.css\";\n\nconst Memopage = () => {\n  const [pages, setPages] = useState([]);\n  const [selectedPage, setSelectedPage] = useState();\n  const [pageContents, setPageContents] = useState({});\n  const [addingPage, setAddingPage] = useState(false);\n  const [newPageTitle, setNewPageTitle] = useState(\"\");\n  const fullUserId = localStorage.getItem(\"userId\"); // 예: abc1234-윤형남\n  const [uid, name] = fullUserId.split(\"-\");\n\n  useEffect(() => {\n    const fetchPages = async () => {\n      const userId = localStorage.getItem(\"userId\"); // Firebase UID or 내부 userId\n\n      const res = await fetch(`http://localhost:8080/api/pages?userId=${userId}`);\n      const data = await res.json();\n\n      const titles = data.map(page => page.title);\n      const contents = {};\n      data.forEach(p => {\n        contents[p.title] = p.content;\n      });\n\n      setPages(titles);\n      setPageContents(contents);\n      setSelectedPage(titles[0] || \"\"); // 첫 페이지 선택\n    };\n\n    fetchPages();\n  }, []);\n\n  const handleChange = (e) => {\n    setPageContents({ ...pageContents, [selectedPage]: e.target.value });\n  };\n\n  const handleAddPage = async () => {\n    const title = newPageTitle.trim();\n    if (!title || pages.includes(title)) return;\n  \n    const userId = localStorage.getItem(\"userId\");\n  \n    try {\n      await fetch(\"http://localhost:8080/api/pages\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ userId, title })\n      });\n  \n      const updated = [...pages, title];\n      setPages(updated);\n      setSelectedPage(title);\n      setNewPageTitle(\"\");\n      setAddingPage(false);\n    } catch (err) {\n      console.error(\"페이지 저장 실패:\", err);\n    }\n  };\n  \n\n  return (\n    <div className=\"memo-container\">\n      {/* Sidebar */}\n      <div className=\"memo-sidebar\">\n        <div className=\"sidebar-header\">\n          <h2 className=\"sidebar-title\">개인 페이지</h2>\n          <button className=\"add-button\" onClick={() => setAddingPage(!addingPage)}>＋</button>\n        </div>\n\n        {addingPage && (\n          <div className=\"new-page-input\">\n            <input\n              type=\"text\"\n              placeholder=\"페이지 제목 입력\"\n              value={newPageTitle}\n              onChange={(e) => setNewPageTitle(e.target.value)}\n              onKeyDown={(e) => e.key === \"Enter\" && handleAddPage()}\n            />\n            <button onClick={handleAddPage}>추가</button>\n          </div>\n        )}\n\n        <ul className=\"page-list\">\n          {pages.map((page) => (\n            <li\n              key={page}\n              className={`page-item ${selectedPage === page ? \"active\" : \"\"}`}\n              onClick={() => setSelectedPage(page)}\n            >\n              {page}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Editor */}\n      <div className=\"memo-editor\">\n        <h2 className=\"editor-title\">{selectedPage}</h2>\n        <textarea\n          className=\"editor-textarea\"\n          placeholder=\"...\"\n          value={pageContents[selectedPage] || \"\"}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Memopage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
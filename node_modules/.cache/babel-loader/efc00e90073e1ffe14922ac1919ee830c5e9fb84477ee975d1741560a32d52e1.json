{"ast":null,"code":"const API_KEY = \"YOUR_API_KEY\"; // 여기에 발급받은 키 입력\n\nconst sendToGemini = async userInput => {\n  var _json$candidates, _json$candidates$, _json$candidates$$con, _json$candidates$$con2, _json$candidates$$con3;\n  const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${API_KEY}`;\n  const body = {\n    contents: [{\n      role: \"user\",\n      parts: [{\n        text: `다음 식단 정보를 바탕으로 각 음식의 열량, 탄수화물, 단백질, 지방을 요약해줘. 그람(g) 단위 기준으로 계산해줘. 예시는 다음과 같아:\n\n예시 입력:\n닭가슴살 150\n고구마 200\n오트밀 40\n\n예시 출력:\n- 닭가슴살 150g: 165kcal, 탄수 0g, 단백질 31g, 지방 3.5g\n- 고구마 200g: 160kcal, 탄수 38g, 단백질 1.5g, 지방 0g\n- 오트밀 40g: 150kcal, 탄수 27g, 단백질 5g, 지방 3g\n\n이제 다음 식단을 분석해줘:\n\n${userInput}`\n      }]\n    }]\n  };\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(`Gemini API 오류 (${response.status}): ${JSON.stringify(json)}`);\n  }\n  return ((_json$candidates = json.candidates) === null || _json$candidates === void 0 ? void 0 : (_json$candidates$ = _json$candidates[0]) === null || _json$candidates$ === void 0 ? void 0 : (_json$candidates$$con = _json$candidates$.content) === null || _json$candidates$$con === void 0 ? void 0 : (_json$candidates$$con2 = _json$candidates$$con.parts) === null || _json$candidates$$con2 === void 0 ? void 0 : (_json$candidates$$con3 = _json$candidates$$con2[0]) === null || _json$candidates$$con3 === void 0 ? void 0 : _json$candidates$$con3.text) || \"응답 없음\";\n};\nexport default sendToGemini;","map":{"version":3,"names":["API_KEY","sendToGemini","userInput","_json$candidates","_json$candidates$","_json$candidates$$con","_json$candidates$$con2","_json$candidates$$con3","url","body","contents","role","parts","text","response","fetch","method","headers","JSON","stringify","json","ok","Error","status","candidates","content"],"sources":["/Users/yunhyungnam/Desktop/foodrecord/front/src/components/SendToGemini.js"],"sourcesContent":["const API_KEY = \"YOUR_API_KEY\"; // 여기에 발급받은 키 입력\n\nconst sendToGemini = async (userInput) => {\n  const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${API_KEY}`;\n\n  const body = {\n    contents: [\n      {\n        role: \"user\",\n        parts: [\n          {\n            text: `다음 식단 정보를 바탕으로 각 음식의 열량, 탄수화물, 단백질, 지방을 요약해줘. 그람(g) 단위 기준으로 계산해줘. 예시는 다음과 같아:\n\n예시 입력:\n닭가슴살 150\n고구마 200\n오트밀 40\n\n예시 출력:\n- 닭가슴살 150g: 165kcal, 탄수 0g, 단백질 31g, 지방 3.5g\n- 고구마 200g: 160kcal, 탄수 38g, 단백질 1.5g, 지방 0g\n- 오트밀 40g: 150kcal, 탄수 27g, 단백질 5g, 지방 3g\n\n이제 다음 식단을 분석해줘:\n\n${userInput}`\n          }\n        ]\n      }\n    ]\n  };\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body),\n  });\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(`Gemini API 오류 (${response.status}): ${JSON.stringify(json)}`);\n  }\n\n  return json.candidates?.[0]?.content?.parts?.[0]?.text || \"응답 없음\";\n};\n\nexport default sendToGemini;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,cAAc,CAAC,CAAC;;AAEhC,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACxC,MAAMC,GAAG,GAAG,qGAAqGR,OAAO,EAAE;EAE1H,MAAMS,IAAI,GAAG;IACXC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,CACL;QACEC,IAAI,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAEX,SAAS;MACD,CAAC;IAEL,CAAC;EAEL,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;IAChCQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CR,IAAI,EAAES,IAAI,CAACC,SAAS,CAACV,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMW,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;EAElC,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkBR,QAAQ,CAACS,MAAM,MAAML,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;EAChF;EAEA,OAAO,EAAAjB,gBAAA,GAAAiB,IAAI,CAACI,UAAU,cAAArB,gBAAA,wBAAAC,iBAAA,GAAfD,gBAAA,CAAkB,CAAC,CAAC,cAAAC,iBAAA,wBAAAC,qBAAA,GAApBD,iBAAA,CAAsBqB,OAAO,cAAApB,qBAAA,wBAAAC,sBAAA,GAA7BD,qBAAA,CAA+BO,KAAK,cAAAN,sBAAA,wBAAAC,sBAAA,GAApCD,sBAAA,CAAuC,CAAC,CAAC,cAAAC,sBAAA,uBAAzCA,sBAAA,CAA2CM,IAAI,KAAI,OAAO;AACnE,CAAC;AAED,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}